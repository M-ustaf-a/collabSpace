<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= project.name %> - CollabSpace</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #A82400;
            --primary-dark: #8A1E00;
            --secondary-color: #D63A0D;
            --accent-color: #FFEBCD;
            --bg-color: #FFEBCD;
            --card-bg: #FFF5E6;
            --hover-bg: #FFE4CC;
            --text-primary: #A82400;
            --text-secondary: #6B4423;
            --text-dark: #3A2317;
            --white: #FFFFFF;
            --gray-50: #FAFAFA;
            --gray-100: #F5F5F5;
            --gray-200: #E5E5E5;
            --gray-300: #D4D4D4;
            --gray-600: #525252;
            --gray-800: #262626;
            --shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--gray-50);
            color: var(--text-dark);
            font-size: 14px;
            line-height: 1.6;
        }
        
        /* Header Styling */
        .header {
            background: var(--primary-color);
            color: var(--white);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: var(--shadow-lg);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .header-left {
            display: flex;
            align-items: center;
            gap: 1rem;
            flex: 1;
        }
        
        .back-btn {
            background: rgba(255,255,255,0.1);
            border: none;
            color: var(--white);
            font-size: 1rem;
            cursor: pointer;
            padding: 0.75rem;
            border-radius: 8px;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .back-btn:hover {
            background: rgba(255,255,255,0.2);
            transform: translateX(-2px);
        }
        
        .project-header {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .project-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
        }
        
        .member-badge {
            background: rgba(255,255,255,0.15);
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
        }
        
        .header-actions {
            display: flex;
            gap: 0.75rem;
        }
        
        .mobile-menu-btn {
            display: none;
            background: rgba(255,255,255,0.1);
            border: none;
            color: var(--white);
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0.75rem;
            border-radius: 8px;
        }
        
        /* Main Layout */
        .main-container {
            display: grid;
            grid-template-columns: 280px 1fr 320px;
            min-height: calc(100vh - 80px);
            gap: 0;
        }
        
        .sidebar {
            background: var(--white);
            border-right: 1px solid var(--gray-200);
            display: flex;
            flex-direction: column;
            overflow-y: auto;
        }
        
        .content-area {
            background: var(--white);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }
        
        .sidebar-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--gray-200);
            background: var(--gray-50);
        }
        
        .sidebar-title {
            font-size: 1rem;
            font-weight: 600;
            color: var(--text-dark);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .sidebar-content {
            padding: 1.5rem;
            flex: 1;
        }
        
        /* Tab Navigation */
        .tab-nav {
            display: flex;
            background: var(--gray-50);
            border-bottom: 1px solid var(--gray-200);
        }
        
        .tab-btn {
            flex: 1;
            padding: 1rem 1.5rem;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 500;
            color: var(--text-secondary);
            transition: all 0.2s ease;
            position: relative;
        }
        
        .tab-btn.active {
            color: var(--primary-color);
            background: var(--white);
        }
        
        .tab-btn.active::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--primary-color);
        }
        
        .tab-btn:hover:not(.active) {
            background: var(--hover-bg);
            color: var(--text-dark);
        }
        
        /* Tab Content */
        .tab-content {
            display: none;
            flex: 1;
            padding: 2rem;
            overflow-y: auto;
        }
        
        .tab-content.active {
            display: flex;
            flex-direction: column;
        }
        
        .content-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }
        
        .content-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-dark);
        }
        
        /* Task Styling */
        .task-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .task-card {
            background: var(--white);
            border: 1px solid var(--gray-200);
            border-radius: 12px;
            padding: 1.5rem;
            transition: all 0.2s ease;
            box-shadow: var(--shadow-xs);
        }
        
        .task-card:hover {
            box-shadow: var(--shadow-md);
            border-color: var(--primary-color);
            transform: translateY(-1px);
        }
        
        .task-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
            gap: 1rem;
        }
        
        .task-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-dark);
            line-height: 1.3;
            margin: 0;
        }
        
        .task-status {
            padding: 0.375rem 0.75rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            white-space: nowrap;
        }
        
        .status-pending {
            background: #FEF3C7;
            color: #92400E;
            border: 1px solid #FDE68A;
        }
        
        .status-inprogress {
            background: #DBEAFE;
            color: #1E40AF;
            border: 1px solid #BFDBFE;
        }
        
        .status-completed {
            background: #D1FAE5;
            color: #065F46;
            border: 1px solid #A7F3D0;
        }
        
        .task-description {
            color: var(--text-secondary);
            margin-bottom: 1rem;
            line-height: 1.5;
        }
        
        .task-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }
        
        .task-meta {
            display: flex;
            align-items: center;
            gap: 1rem;
            flex-wrap: wrap;
        }
        
        .priority-badge {
            padding: 0.25rem 0.6rem;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .priority-high {
            background: #FEE2E2;
            color: #991B1B;
        }
        
        .priority-medium {
            background: #FEF3C7;
            color: #92400E;
        }
        
        .priority-low {
            background: #DBEAFE;
            color: #1E40AF;
        }
        
        .task-assignee {
            font-size: 0.85rem;
            color: var(--text-secondary);
        }
        
        .task-actions {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        /* FIXED: Smaller task status select dropdown */
        .status-select {
            padding: 0.25rem 0.5rem;
            border: 1px solid var(--gray-300);
            border-radius: 4px;
            font-size: 0.75rem;
            background: var(--white);
            color: var(--text-dark);
            cursor: pointer;
            min-width: 100px;
            max-width: 120px;
            height: 28px;
            line-height: 1.2;
        }
        
        .status-select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(168, 36, 0, 0.1);
        }
        
        .status-select:hover {
            border-color: var(--primary-color);
        }
        
        /* Member List */
        .member-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .member-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            border-radius: 8px;
            transition: all 0.2s ease;
        }
        
        .member-item:hover {
            background: var(--gray-50);
        }
        
        .member-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--white);
            font-weight: 600;
            font-size: 1.1rem;
            box-shadow: var(--shadow-sm);
        }
        
        .member-info {
            flex: 1;
        }
        
        .member-name {
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 0.25rem;
        }
        
        .member-status {
            font-size: 0.85rem;
            display: flex;
            align-items: center;
            gap: 0.375rem;
        }
        
        .status-online {
            color: #10B981;
        }
        
        .status-offline {
            color: var(--gray-600);
        }
        
        /* File List */
        .file-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .file-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            border: 1px solid var(--gray-200);
            border-radius: 8px;
            background: var(--white);
            transition: all 0.2s ease;
        }
        
        .file-item:hover {
            background: var(--gray-50);
            border-color: var(--primary-color);
        }
        
        .file-icon {
            width: 45px;
            height: 45px;
            border-radius: 8px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--white);
            font-size: 1.2rem;
        }
        
        .file-info {
            flex: 1;
            min-width: 0;
        }
        
        .file-name {
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 0.25rem;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .file-meta {
            font-size: 0.85rem;
            color: var(--text-secondary);
        }
        
        /* Chat Styling */
        .chat-container {
            display: flex;
            flex-direction: column;
            height: 100%;
        }
        
        .chat-messages {
            flex: 1;
            padding: 1.5rem;
            overflow-y: auto;
            background: var(--gray-50);
            min-height: 300px;
        }
        
        .message {
            margin-bottom: 1rem;
            display: flex;
            gap: 0.75rem;
        }
        
        .message.own {
            flex-direction: row-reverse;
        }
        
        .message-avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--white);
            font-weight: 600;
            font-size: 0.9rem;
            flex-shrink: 0;
        }
        
        .message-content {
            max-width: 70%;
            background: var(--white);
            padding: 0.75rem 1rem;
            border-radius: 12px;
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--gray-200);
        }
        
        .message.own .message-content {
            background: var(--primary-color);
            color: var(--white);
            border-color: var(--primary-color);
        }
        
        .message-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            font-size: 0.75rem;
            font-weight: 600;
        }
        
        .message.own .message-header {
            color: rgba(255,255,255,0.8);
        }
        
        .chat-input {
            padding: 1.5rem;
            border-top: 1px solid var(--gray-200);
            background: var(--white);
        }
        
        .input-group {
            display: flex;
            gap: 0.75rem;
            align-items: center;
        }
        
        .chat-input-field {
            flex: 1;
            padding: 0.75rem 1rem;
            border: 1px solid var(--gray-300);
            border-radius: 20px;
            outline: none;
            font-size: 0.9rem;
            background: var(--gray-50);
            transition: all 0.2s ease;
        }
        
        .chat-input-field:focus {
            border-color: var(--primary-color);
            background: var(--white);
            box-shadow: 0 0 0 3px rgba(168, 36, 0, 0.1);
        }
        
        .send-btn {
            background: var(--primary-color);
            color: var(--white);
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
            font-size: 0.9rem;
        }
        
        .send-btn:hover {
            background: var(--primary-dark);
            transform: scale(1.05);
        }
        
        /* Buttons - Fixed sizing */
        .btn {
            padding: 0.625rem 1rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.375rem;
            white-space: nowrap;
            box-shadow: var(--shadow-sm);
            line-height: 1.4;
            min-height: 36px;
        }
        
        .btn i {
            font-size: 0.8rem;
        }
        
        .btn-primary {
            background: var(--primary-color);
            color: var(--white);
        }
        
        .btn-primary:hover {
            background: var(--primary-dark);
            transform: translateY(-1px);
            box-shadow: var(--shadow-md);
        }
        
        .btn-secondary {
            background: var(--white);
            color: var(--text-primary);
            border: 1px solid var(--gray-300);
        }
        
        .btn-secondary:hover {
            background: var(--gray-50);
            border-color: var(--primary-color);
        }
        
        .btn-success {
            background: #10B981;
            color: var(--white);
        }
        
        .btn-success:hover {
            background: #059669;
            transform: translateY(-1px);
        }
        
        /* Modal Styling */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            backdrop-filter: blur(4px);
        }
        
        .modal-content {
            background: var(--white);
            padding: 1rem;
            width: 90%;
            max-width: 500px;
            position: relative;
            box-shadow: var(--shadow-xl);
        }
        
        .modal-header {
            margin-bottom: 1.5rem;
        }
        
        .modal-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-dark);
        }
        
        .close {
            position: absolute;
            right: 1rem;
            top: 1rem;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: var(--gray-100);
            border: none;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-secondary);
            transition: all 0.2s ease;
        }
        
        .close:hover {
            background: var(--gray-200);
            color: var(--text-dark);
        }
        
        /* Form Styling */
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--text-dark);
        }
        
        .form-input,
        .form-textarea,
        .form-select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--gray-300);
            border-radius: 8px;
            font-size: 0.9rem;
            background: var(--white);
            transition: all 0.2s ease;
        }
        
        .form-input:focus,
        .form-textarea:focus,
        .form-select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(168, 36, 0, 0.1);
        }
        
        .form-textarea {
            resize: vertical;
            min-height: 100px;
        }
        
        /* Form Actions */
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid var(--gray-200);
        }
        
        /* Empty States */
        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            color: var(--text-secondary);
        }
        
        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: var(--gray-300);
        }
        
        .empty-state h3 {
            color: var(--text-dark);
            margin-bottom: 0.5rem;
            font-weight: 600;
        }
        
        /* Responsive Design */
        @media (max-width: 1024px) {
            .main-container {
                grid-template-columns: 250px 1fr 280px;
            }
        }
        
        @media (max-width: 768px) {
            .header {
                padding: 1rem;
            }
            
            .project-title {
                font-size: 1.25rem;
            }
            
            .mobile-menu-btn {
                display: block;
            }
            
            .header-actions {
                display: none;
            }
            
            .main-container {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                display: none;
            }
            
            .sidebar.mobile-open {
                display: flex;
                position: fixed;
                top: 80px;
                left: 0;
                right: 0;
                bottom: 0;
                z-index: 200;
            }
            
            .tab-nav {
                flex-wrap: wrap;
            }
            
            .tab-btn {
                flex: 1;
                min-width: 25%;
            }
            
            .task-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.75rem;
            }
            
            .task-footer {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.75rem;
            }
            
            .modal-content {
                width: 95%;
                margin: 10% auto;
                padding: 1.5rem;
            }
            
            /* Mobile-specific task status select */
            .status-select {
                font-size: 0.7rem;
                padding: 0.2rem 0.4rem;
                min-width: 90px;
                height: 26px;
            }
        }
        
        @media (max-width: 480px) {
            .header {
                padding: 0.75rem;
            }
            
            .project-title {
                font-size: 1.1rem;
            }
            
            .tab-content {
                padding: 1rem;
            }
            
            .task-card {
                padding: 1rem;
            }
            
            .content-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .btn {
                padding: 0.5rem 0.875rem;
                font-size: 0.8rem;
            }
            
            /* Smaller task status select for very small screens */
            .status-select {
                font-size: 0.65rem;
                padding: 0.15rem 0.3rem;
                min-width: 80px;
                height: 24px;
            }
        }
        
        /* Mobile overlay */
        .mobile-overlay {
            display: none;
            position: fixed;
            top: 80px;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            z-index: 150;
        }
        
        .mobile-overlay.active {
            display: block;
        }
        
        /* Utility classes */
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border: 0;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="header-left">
            <button class="back-btn" onclick="window.location.href='/dashboard'">
                <i class="fas fa-arrow-left"></i>
            </button>
            <div class="project-header">
                <h1 class="project-title"><%= project.name %></h1>
                <span class="member-badge">
                    <i class="fas fa-users"></i> <%= project.members.length %> members
                </span>
            </div>
        </div>
        
        <div class="header-actions">
            <button class="btn btn-success" onclick="startProjectCall()">
                <i class="fas fa-video"></i> Start Call
            </button>
            <button class="btn btn-secondary" onclick="openModal('inviteModal')">
                <i class="fas fa-user-plus"></i> Invite
            </button>
        </div>
        
        <button class="mobile-menu-btn" onclick="toggleMobileMenu()">
            <i class="fas fa-bars"></i>
        </button>
    </header>

    <!-- Mobile Overlay -->
    <div class="mobile-overlay" id="mobileOverlay" onclick="closeMobileMenu()"></div>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Left Sidebar - Team Members -->
        <aside class="sidebar" id="leftSidebar">
            <div class="sidebar-header">
                <h2 class="sidebar-title">
                    <i class="fas fa-users"></i> Team Members
                </h2>
            </div>
            <div class="sidebar-content">
                <div class="member-list">
                    <% project.members.forEach(member => { %>
                        <div class="member-item">
                            <div class="member-avatar">
                                <%= member.username.charAt(0).toUpperCase() %>
                            </div>
                            <div class="member-info">
                                <div class="member-name"><%= member.username %></div>
                                <div class="member-status status-<%= member.status || 'offline' %>">
                                    <i class="fas fa-circle"></i>
                                    <%= (member.status || 'offline').charAt(0).toUpperCase() + (member.status || 'offline').slice(1) %>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </aside>

        <!-- Main Content Area -->
        <main class="content-area">
            <!-- Tab Navigation -->
            <nav class="tab-nav">
                <button class="tab-btn active" onclick="switchTab('tasks')">
                    <i class="fas fa-tasks"></i> Tasks
                </button>
                <button class="tab-btn" onclick="switchTab('files')">
                    <i class="fas fa-folder"></i> Files
                </button>
                <button class="tab-btn mobile-only" onclick="showMobileSidebar('left')">
                    <i class="fas fa-users"></i> Team
                </button>
                <button class="tab-btn mobile-only" onclick="showMobileSidebar('right')">
                    <i class="fas fa-comments"></i> Chat
                </button>
            </nav>

            <!-- Tasks Tab Content -->
            <div id="tasks" class="tab-content active">
                <div class="content-header">
                    <h2 class="content-title">Project Tasks</h2>
                    <button class="btn btn-primary" onclick="openModal('createTaskModal')">
                        <i class="fas fa-plus"></i> Add Task
                    </button>
                </div>

                <% if (tasks.length === 0) { %>
                    <div class="empty-state">
                        <i class="fas fa-tasks"></i>
                        <h3>No tasks yet</h3>
                        <p>Create your first task to get started</p>
                        <button class="btn btn-primary" onclick="openModal('createTaskModal')" style="margin-top: 1rem;">
                            <!-- <i class="fas fa-plus" style="height: 5px; width: 5px;"></i> -->
                            Create Task
                        </button>
                    </div>
                <% } else { %>
                    <div class="task-list">
                        <% tasks.forEach(task => { %>
                            <div class="task-card">
                                <div class="task-header">
                                    <h3 class="task-title"><%= task.title %></h3>
                                    <span class="task-status status-<%= task.status.replace('-', '') %>">
                                        <%= task.status.replace('-', ' ') %>
                                    </span>
                                </div>
                                
                                <% if (task.description) { %>
                                    <p class="task-description"><%= task.description %></p>
                                <% } %>
                                
                                <div class="task-footer">
                                    <div class="task-meta">
                                        <span class="priority-badge priority-<%= task.priority %>">
                                            <%= task.priority %> priority
                                        </span>
                                        <% if (task.assignedTo) { %>
                                            <span class="task-assignee">
                                                Assigned to: <%= task.assignedTo.username %>
                                            </span>
                                        <% } %>
                                        <% if (task.dueDate) { %>
                                            <span class="task-assignee">
                                                Due: <%= new Date(task.dueDate).toLocaleDateString() %>
                                            </span>
                                        <% } %>
                                    </div>
                                    <div class="task-actions">
                                        <form action="/task/<%= task._id %>/update" method="POST" style="display: inline;">
                                            <select name="status" class="status-select" onchange="this.form.submit()">
                                                <option value="pending" <%= task.status === 'pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="in-progress" <%= task.status === 'in-progress' ? 'selected' : '' %>>In Progress</option>
                                                <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Completed</option>
                                            </select>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>

            <!-- Files Tab Content -->
            <div id="files" class="tab-content">
                <div class="content-header">
                    <h2 class="content-title">Project Files</h2>
                    <button class="btn btn-primary" onclick="document.getElementById('fileInput').click()">
                        <i class="fas fa-upload"></i> Upload File
                    </button>
                </div>

                <form id="uploadForm" action="/upload/<%= project._id %>" method="POST" enctype="multipart/form-data" style="display: none;">
                    <input type="file" id="fileInput" name="file" onchange="document.getElementById('uploadForm').submit()">
                </form>

                <% if (files.length === 0) { %>
                    <div class="empty-state">
                        <i class="fas fa-folder-open"></i>
                        <h3>No files uploaded</h3>
                        <p>Upload files to share with your team</p>
                        <button class="btn btn-primary" onclick="document.getElementById('fileInput').click()" style="margin-top: 1rem;">
                            <i class="fas fa-upload"></i> Upload File
                        </button>
                    </div>
                <% } else { %>
                    <div class="file-list">
                        <% files.forEach(file => { %>
                            <div class="file-item">
                                <div class="file-icon">
                                    <i class="fas fa-file"></i>
                                </div>
                                <div class="file-info">
                                    <div class="file-name"><%= file.originalName %></div>
                                    <div class="file-meta">
                                        Uploaded by <%= file.uploadedBy.username %> • 
                                        <%= (file.size / 1024).toFixed(1) %> KB • 
                                        <%= new Date(file.uploadedAt).toLocaleDateString() %>
                                    </div>
                                </div>
                                <a href="/uploads/<%= file.filename %>" download class="btn btn-secondary">
                                    <i class="fas fa-download"></i>
                                </a>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>
        </main>

        <!-- Right Sidebar - Chat -->
        <aside class="sidebar" id="rightSidebar">
            <div class="sidebar-header">
                <h2 class="sidebar-title">
                    <i class="fas fa-comments"></i> Team Chat
                </h2>
            </div>
            <div class="chat-container">
                <div class="chat-messages" id="chatMessages">
                    <div class="empty-state" style="padding: 2rem 1rem;">
                        <i class="fas fa-comments"></i>
                        <h3>Team Chat</h3>
                        <p>Start a conversation with your team</p>
                    </div>
                </div>
                <div class="chat-input">
                    <div class="input-group">
                        <input type="text" id="messageInput" class="chat-input-field" 
                               placeholder="Type a message..." maxlength="500" onkeypress="handleKeyPress(event)">
                        <button class="send-btn" onclick="sendMessage()">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>
        </aside>
    </div>

    <!-- Create Task Modal -->
    <div id="createTaskModal" class="modal">
        <div class="modal-content">
            <button class="close" onclick="closeModal('createTaskModal')">
                <i class="fas fa-times"></i>
            </button>
            <div class="modal-header">
                <h2 class="modal-title">Create New Task</h2>
            </div>
            <form action="/task/create" method="POST">
                <input type="hidden" name="projectId" value="<%= project._id %>">
                <div class="form-group">
                    <label for="taskTitle" class="form-label">Task Title</label>
                    <input type="text" id="taskTitle" name="title" class="form-input" required>
                </div>
                <div class="form-group">
                    <label for="taskDescription" class="form-label">Description</label>
                    <textarea id="taskDescription" name="description" class="form-textarea"></textarea>
                </div>
                <div class="form-group">
                    <label for="assignedTo" class="form-label">Assign To</label>
                    <select id="assignedTo" name="assignedTo" class="form-select">
                        <option value="">Unassigned</option>
                        <% project.members.forEach(member => { %>
                            <option value="<%= member._id %>"><%= member.username %></option>
                        <% }); %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="priority" class="form-label">Priority</label>
                    <select id="priority" name="priority" class="form-select">
                        <option value="low">Low</option>
                        <option value="medium" selected>Medium</option>
                        <option value="high">High</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="dueDate" class="form-label">Due Date</label>
                    <input type="date" id="dueDate" name="dueDate" class="form-input">
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('createTaskModal')">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create Task
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Invite Member Modal -->
    <div id="inviteModal" class="modal">
        <div class="modal-content">
            <button class="close" onclick="closeModal('inviteModal')">
                <i class="fas fa-times"></i>
            </button>
            <div class="modal-header">
                <h2 class="modal-title">Invite Team Member</h2>
            </div>
            <form action="/project/<%= project._id %>/invite" method="POST">
                <div class="form-group">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" id="username" name="username" class="form-input" required 
                           placeholder="Enter username to invite">
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('inviteModal')">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i> Send Invite
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const userId = '<%= user._id %>';
        const username = '<%= user.username %>';
        const projectId = '<%= project._id %>';
        const projectRoom = `project-${projectId}`;

        let typingTimer;
        let isTyping = false;

        // Connect to socket and join project room
        socket.emit('userConnected', userId);
        socket.emit('joinRoom', projectRoom);

        // Tab switching functionality
        function switchTab(tabName) {
            // Remove active class from all tabs and content
            document.querySelectorAll('.tab-btn').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            // Add active class to clicked tab and corresponding content
            event.target.classList.add('active');
            document.getElementById(tabName).classList.add('active');
        }

        // Mobile menu functionality
        function toggleMobileMenu() {
            const leftSidebar = document.getElementById('leftSidebar');
            const rightSidebar = document.getElementById('rightSidebar');
            const overlay = document.getElementById('mobileOverlay');
            
            if (leftSidebar.classList.contains('mobile-open') || rightSidebar.classList.contains('mobile-open')) {
                closeMobileMenu();
            } else {
                leftSidebar.classList.add('mobile-open');
                overlay.classList.add('active');
                document.body.style.overflow = 'hidden';
            }
        }

        function showMobileSidebar(side) {
            const sidebar = side === 'left' ? document.getElementById('leftSidebar') : document.getElementById('rightSidebar');
            const overlay = document.getElementById('mobileOverlay');
            
            sidebar.classList.add('mobile-open');
            overlay.classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function closeMobileMenu() {
            document.getElementById('leftSidebar').classList.remove('mobile-open');
            document.getElementById('rightSidebar').classList.remove('mobile-open');
            document.getElementById('mobileOverlay').classList.remove('active');
            document.body.style.overflow = '';
        }

        // Modal functions
        function openModal(modalId) {
            document.getElementById(modalId).style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
            document.body.style.overflow = '';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modals = document.getElementsByClassName('modal');
            for (let modal of modals) {
                if (event.target === modal) {
                    modal.style.display = 'none';
                    document.body.style.overflow = '';
                }
            }
        }

        // Chat functionality
        function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const content = messageInput.value.trim();
            
            if (content) {
                socket.emit('sendMessage', {
                    content: content,
                    senderId: userId,
                    room: projectRoom,
                    type: 'text'
                });
                
                messageInput.value = '';
                stopTyping();
            }
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                sendMessage();
            } else {
                handleTyping();
            }
        }

        function handleTyping() {
            if (!isTyping) {
                isTyping = true;
                socket.emit('typing', {
                    room: projectRoom,
                    userId: userId,
                    username: username
                });
            }
            
            clearTimeout(typingTimer);
            typingTimer = setTimeout(stopTyping, 1000);
        }

        function stopTyping() {
            if (isTyping) {
                isTyping = false;
                socket.emit('stopTyping', {
                    room: projectRoom,
                    userId: userId
                });
            }
        }

        // Socket event listeners
        socket.on('newMessage', (message) => {
            displayMessage(message);
        });

        socket.on('userTyping', (data) => {
            if (data.userId !== userId) {
                showTypingIndicator(data.username);
            }
        });

        socket.on('userStoppedTyping', (data) => {
            if (data.userId !== userId) {
                hideTypingIndicator();
            }
        });

        function displayMessage(message) {
            const chatMessages = document.getElementById('chatMessages');
            
            // Remove empty state if it exists
            const emptyState = chatMessages.querySelector('.empty-state');
            if (emptyState) {
                emptyState.remove();
            }
            
            const isOwn = message.sender._id === userId;
            
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isOwn ? 'own' : ''}`;
            
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    ${message.sender.username.charAt(0).toUpperCase()}
                </div>
                <div class="message-content">
                    <div class="message-header">
                        <span>${isOwn ? 'You' : message.sender.username}</span>
                        <span>${new Date(message.timestamp).toLocaleTimeString()}</span>
                    </div>
                    <div class="message-text">${message.content}</div>
                </div>
            `;
            
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function showTypingIndicator(username) {
            // Implementation for typing indicator
        }

        function hideTypingIndicator() {
            // Implementation for hiding typing indicator
        }

        // Video call functionality
        function startProjectCall() {
            const roomId = `project-${projectId}-call-${Date.now()}`;
            window.open(`/call/${roomId}`, '_blank', 'width=1200,height=800');
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Focus on message input
            const messageInput = document.getElementById('messageInput');
            if (messageInput) {
                messageInput.focus();
            }

            // Handle window resize
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    closeMobileMenu();
                }
            });

            // Handle escape key
            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    // Close modals
                    const modals = document.querySelectorAll('.modal');
                    modals.forEach(modal => {
                        if (modal.style.display === 'block') {
                            modal.style.display = 'none';
                            document.body.style.overflow = '';
                        }
                    });
                    
                    // Close mobile menu
                    closeMobileMenu();
                }
            });
        });
    </script>
</body>
</html>