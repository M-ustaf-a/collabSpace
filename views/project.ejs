<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= project.name %> - CollabSpace</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f5f5;
            color: #333;
        }
        
        .header {
            background: #464775;
            color: white;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .header-left {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .back-btn {
            background: none;
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 5px;
            transition: background 0.3s;
        }
        
        .back-btn:hover {
            background: rgba(255,255,255,0.1);
        }
        
        .project-header {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .project-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }
        
        .main-container {
            display: flex;
            min-height: calc(100vh - 80px);
        }
        
        .left-panel {
            width: 300px;
            background: white;
            border-right: 1px solid #e0e0e0;
            display: flex;
            flex-direction: column;
        }
        
        .center-panel {
            flex: 1;
            display: flex;
            flex-direction: column;
        }
        
        .right-panel {
            width: 350px;
            background: white;
            border-left: 1px solid #e0e0e0;
            display: flex;
            flex-direction: column;
        }
        
        .panel-header {
            padding: 1rem;
            border-bottom: 1px solid #e0e0e0;
            font-weight: 600;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .panel-content {
            flex: 1;
            padding: 1rem;
            overflow-y: auto;
        }
        
        .tab-container {
            display: flex;
            background: white;
            border-bottom: 1px solid #e0e0e0;
        }
        
        .tab {
            flex: 1;
            padding: 1rem;
            text-align: center;
            cursor: pointer;
            background: #f8f9fa;
            border: none;
            font-size: 0.9rem;
            transition: all 0.3s;
        }
        
        .tab.active {
            background: white;
            border-bottom: 3px solid #6c63ff;
            color: #6c63ff;
        }
        
        .tab-content {
            display: none;
            flex: 1;
            padding: 1rem;
            overflow-y: auto;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .task-item {
            background: white;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
            transition: all 0.3s;
        }
        
        .task-item:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        
        .task-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.5rem;
        }
        
        .task-title {
            font-weight: 600;
            color: #333;
        }
        
        .task-status {
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .status-pending {
            background: #fff3cd;
            color: #856404;
        }
        
        .status-inprogress {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        .status-completed {
            background: #d4edda;
            color: #155724;
        }
        
        .task-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 0.5rem;
            font-size: 0.8rem;
            color: #666;
        }
        
        .priority-badge {
            padding: 0.2rem 0.5rem;
            border-radius: 10px;
            font-size: 0.7rem;
            font-weight: 500;
        }
        
        .priority-high {
            background: #f8d7da;
            color: #721c24;
        }
        
        .priority-medium {
            background: #fff3cd;
            color: #856404;
        }
        
        .priority-low {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        .member-list {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .member-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.5rem;
            border-radius: 5px;
            transition: background 0.3s;
        }
        
        .member-item:hover {
            background: #f8f9fa;
        }
        
        .member-avatar {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background: #6c63ff;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 500;
            font-size: 0.9rem;
        }
        
        .member-info {
            flex: 1;
        }
        
        .member-name {
            font-weight: 500;
            margin-bottom: 0.2rem;
        }
        
        .member-status {
            font-size: 0.8rem;
            color: #666;
        }
        
        .status-online {
            color: #4caf50;
        }
        
        .file-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 0.5rem;
            transition: all 0.3s;
        }
        
        .file-item:hover {
            background: #f8f9fa;
            border-color: #6c63ff;
        }
        
        .file-icon {
            width: 40px;
            height: 40px;
            border-radius: 8px;
            background: #6c63ff;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }
        
        .file-info {
            flex: 1;
        }
        
        .file-name {
            font-weight: 500;
            margin-bottom: 0.2rem;
        }
        
        .file-meta {
            font-size: 0.8rem;
            color: #666;
        }
        
        .chat-container {
            display: flex;
            flex-direction: column;
            height: 100%;
        }
        
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
            background: #f8f9fa;
        }
        
        .message {
            margin-bottom: 1rem;
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .message.own {
            flex-direction: row-reverse;
        }
        
        .message-avatar {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background: #6c63ff;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 500;
            font-size: 0.9rem;
            flex-shrink: 0;
        }
        
        .message-content {
            max-width: 70%;
            background: white;
            padding: 0.75rem;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .message.own .message-content {
            background: #6c63ff;
            color: white;
        }
        
        .message-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.5rem;
            font-size: 0.8rem;
        }
        
        .message.own .message-header {
            color: rgba(255,255,255,0.8);
        }
        
        .message-text {
            line-height: 1.4;
        }
        
        .chat-input {
            padding: 1rem;
            border-top: 1px solid #e0e0e0;
            background: white;
        }
        
        .input-group {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }
        
        .input-group input {
            flex: 1;
            padding: 0.75rem;
            border: 1px solid #e0e0e0;
            border-radius: 25px;
            outline: none;
            font-size: 0.9rem;
        }
        
        .input-group input:focus {
            border-color: #6c63ff;
        }
        
        .send-btn {
            background: #6c63ff;
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s;
        }
        
        .send-btn:hover {
            background: #5a52d5;
            transform: scale(1.1);
        }
        
        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .btn-primary {
            background: #6c63ff;
            color: white;
        }
        
        .btn-primary:hover {
            background: #5a52d5;
        }
        
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        
        .btn-secondary:hover {
            background: #5a6268;
        }
        
        .btn-success {
            background: #28a745;
            color: white;
        }
        
        .btn-success:hover {
            background: #218838;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        
        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 2rem;
            border-radius: 10px;
            width: 90%;
            max-width: 500px;
            position: relative;
        }
        
        .close {
            position: absolute;
            right: 1rem;
            top: 1rem;
            font-size: 1.5rem;
            cursor: pointer;
            color: #666;
        }
        
        .form-group {
            margin-bottom: 1rem;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #333;
        }
        
        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #e0e0e0;
            border-radius: 5px;
            font-size: 0.9rem;
        }
        
        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }
        
        .typing-indicator {
            padding: 0.5rem 1rem;
            font-size: 0.8rem;
            color: #666;
            font-style: italic;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-left">
            <button class="back-btn" onclick="window.location.href='/dashboard'">
                <i class="fas fa-arrow-left"></i>
            </button>
            <div class="project-header">
                <h1><%= project.name %></h1>
                <span style="margin-left: 1rem; opacity: 0.8;">
                    <%= project.members.length %> members
                </span>
            </div>
        </div>
        <div class="project-actions">
            <button class="btn btn-success" onclick="startProjectCall()">
                <i class="fas fa-video"></i> Start Call
            </button>
            <button class="btn btn-secondary" onclick="openModal('inviteModal')">
                <i class="fas fa-user-plus"></i> Invite
            </button>
        </div>
    </div>

    <div class="main-container">
        <!-- Left Panel - Project Members -->
        <div class="left-panel">
            <div class="panel-header">
                <span><i class="fas fa-users"></i> Team Members</span>
            </div>
            <div class="panel-content">
                <div class="member-list">
                    <% project.members.forEach(member => { %>
                        <div class="member-item">
                            <div class="member-avatar">
                                <%= member.username.charAt(0).toUpperCase() %>
                            </div>
                            <div class="member-info">
                                <div class="member-name"><%= member.username %></div>
                                <div class="member-status status-<%= member.status %>">
                                    <i class="fas fa-circle"></i> <%= member.status %>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>

        <!-- Center Panel - Tasks and Files -->
        <div class="center-panel">
            <div class="tab-container">
                <button class="tab active" onclick="switchTab('tasks')">
                    <i class="fas fa-tasks"></i> Tasks
                </button>
                <button class="tab" onclick="switchTab('files')">
                    <i class="fas fa-folder"></i> Files
                </button>
            </div>

            <!-- Tasks Tab -->
            <div id="tasks" class="tab-content active">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h3>Project Tasks</h3>
                    <button class="btn btn-primary" onclick="openModal('createTaskModal')">
                        <i class="fas fa-plus"></i> Add Task
                    </button>
                </div>

                <% if (tasks.length === 0) { %>
                    <div style="text-align: center; padding: 3rem; color: #666;">
                        <i class="fas fa-tasks" style="font-size: 3rem; margin-bottom: 1rem;"></i>
                        <h3>No tasks yet</h3>
                        <p>Create your first task to get started</p>
                    </div>
                <% } else { %>
                    <div class="task-list">
                        <% tasks.forEach(task => { %>
                            <div class="task-item">
                                <div class="task-header">
                                    <div class="task-title"><%= task.title %></div>
                                    <div class="task-status status-<%= task.status.replace('-', '') %>">
                                        <%= task.status.replace('-', ' ') %>
                                    </div>
                                </div>
                                <% if (task.description) { %>
                                    <p style="color: #666; margin-bottom: 0.5rem;"><%= task.description %></p>
                                <% } %>
                                <div class="task-meta">
                                    <div>
                                        <span class="priority-badge priority-<%= task.priority %>">
                                            <%= task.priority %> priority
                                        </span>
                                        <% if (task.assignedTo) { %>
                                            <span style="margin-left: 0.5rem;">
                                                Assigned to: <%= task.assignedTo.username %>
                                            </span>
                                        <% } %>
                                    </div>
                                    <div>
                                        <% if (task.dueDate) { %>
                                            <span>Due: <%= new Date(task.dueDate).toLocaleDateString() %></span>
                                        <% } %>
                                        <form style="display: inline; margin-left: 1rem;" 
                                              action="/task/<%= task._id %>/update" method="POST">
                                            <select name="status" onchange="this.form.submit()" 
                                                    style="padding: 0.2rem; border: 1px solid #ccc; border-radius: 3px;">
                                                <option value="pending" <%= task.status === 'pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="in-progress" <%= task.status === 'in-progress' ? 'selected' : '' %>>In Progress</option>
                                                <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Completed</option>
                                            </select>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>

            <!-- Files Tab -->
            <div id="files" class="tab-content">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h3>Project Files</h3>
                    <button class="btn btn-primary" onclick="document.getElementById('fileInput').click()">
                        <i class="fas fa-upload"></i> Upload File
                    </button>
                </div>

                <form id="uploadForm" action="/upload/<%= project._id %>" method="POST" enctype="multipart/form-data" style="display: none;">
                    <input type="file" id="fileInput" name="file" onchange="document.getElementById('uploadForm').submit()">
                </form>

                <% if (files.length === 0) { %>
                    <div style="text-align: center; padding: 3rem; color: #666;">
                        <i class="fas fa-folder-open" style="font-size: 3rem; margin-bottom: 1rem;"></i>
                        <h3>No files uploaded</h3>
                        <p>Upload files to share with your team</p>
                    </div>
                <% } else { %>
                    <div class="file-list">
                        <% files.forEach(file => { %>
                            <div class="file-item">
                                <div class="file-icon">
                                    <i class="fas fa-file"></i>
                                </div>
                                <div class="file-info">
                                    <div class="file-name"><%= file.originalName %></div>
                                    <div class="file-meta">
                                        Uploaded by <%= file.uploadedBy.username %> • 
                                        <%= (file.size / 1024).toFixed(1) %> KB • 
                                        <%= new Date(file.uploadedAt).toLocaleDateString() %>
                                    </div>
                                </div>
                                <a href="/uploads/<%= file.filename %>" download class="btn btn-secondary">
                                    <i class="fas fa-download"></i>
                                </a>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Right Panel - Chat -->
        <div class="right-panel">
            <div class="panel-header">
                <span><i class="fas fa-comments"></i> Team Chat</span>
            </div>
            <div class="chat-container">
                <div class="chat-messages" id="chatMessages">
                    <!-- Messages will be loaded here -->
                </div>
                <div class="typing-indicator" id="typingIndicator" style="display: none;">
                    Someone is typing...
                </div>
                <div class="chat-input">
                    <div class="input-group">
                        <input type="text" id="messageInput" placeholder="Type a message..." 
                               maxlength="500" onkeypress="handleKeyPress(event)">
                        <button class="send-btn" onclick="sendMessage()">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Task Modal -->
    <div id="createTaskModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('createTaskModal')">&times;</span>
            <h2>Create New Task</h2>
            <form action="/task/create" method="POST">
                <input type="hidden" name="projectId" value="<%= project._id %>">
                <div class="form-group">
                    <label for="taskTitle">Task Title</label>
                    <input type="text" id="taskTitle" name="title" required>
                </div>
                <div class="form-group">
                    <label for="taskDescription">Description</label>
                    <textarea id="taskDescription" name="description"></textarea>
                </div>
                <div class="form-group">
                    <label for="assignedTo">Assign To</label>
                    <select id="assignedTo" name="assignedTo">
                        <option value="">Unassigned</option>
                        <% project.members.forEach(member => { %>
                            <option value="<%= member._id %>"><%= member.username %></option>
                        <% }); %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="priority">Priority</label>
                    <select id="priority" name="priority">
                        <option value="low">Low</option>
                        <option value="medium" selected>Medium</option>
                        <option value="high">High</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="dueDate">Due Date</label>
                    <input type="date" id="dueDate" name="dueDate">
                </div>
                <div style="text-align: right; gap: 1rem; display: flex; justify-content: flex-end;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('createTaskModal')">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create Task
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Invite Member Modal -->
    <div id="inviteModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('inviteModal')">&times;</span>
            <h2>Invite Team Member</h2>
            <form action="/project/<%= project._id %>/invite" method="POST">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" name="username" required 
                           placeholder="Enter username to invite">
                </div>
                <div style="text-align: right; gap: 1rem; display: flex; justify-content: flex-end;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('inviteModal')">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i> Send Invite
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const userId = '<%= user._id %>';
        const username = '<%= user.username %>';
        const projectId = '<%= project._id %>';
        const projectRoom = `project-${projectId}`;

        let typingTimer;
        let isTyping = false;

        // Connect to socket and join project room
        socket.emit('userConnected', userId);
        socket.emit('joinRoom', projectRoom);

        // Load existing messages
        loadMessages();

        // Tab switching functionality
        function switchTab(tabName) {
            // Remove active class from all tabs and content
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            // Add active class to clicked tab and corresponding content
            event.target.classList.add('active');
            document.getElementById(tabName).classList.add('active');
        }

        // Modal functions
        function openModal(modalId) {
            document.getElementById(modalId).style.display = 'block';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modals = document.getElementsByClassName('modal');
            for (let modal of modals) {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            }
        }

        // Chat functionality
        function loadMessages() {
            // In a real implementation, you would load messages from the server
            // For now, we'll just initialize the chat
            const chatMessages = document.getElementById('chatMessages');
            chatMessages.innerHTML = '<div style="text-align: center; padding: 1rem; color: #666;">Chat history will appear here</div>';
        }

        function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const content = messageInput.value.trim();
            
            if (content) {
                socket.emit('sendMessage', {
                    content: content,
                    senderId: userId,
                    room: projectRoom,
                    type: 'text'
                });
                
                messageInput.value = '';
                stopTyping();
            }
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                sendMessage();
            } else {
                handleTyping();
            }
        }

        function handleTyping() {
            if (!isTyping) {
                isTyping = true;
                socket.emit('typing', {
                    room: projectRoom,
                    userId: userId,
                    username: username
                });
            }
            
            clearTimeout(typingTimer);
            typingTimer = setTimeout(stopTyping, 1000);
        }

        function stopTyping() {
            if (isTyping) {
                isTyping = false;
                socket.emit('stopTyping', {
                    room: projectRoom,
                    userId: userId
                });
            }
        }

        // Socket event listeners
        socket.on('newMessage', (message) => {
            displayMessage(message);
        });

        socket.on('userTyping', (data) => {
            if (data.userId !== userId) {
                showTypingIndicator(data.username);
            }
        });

        socket.on('userStoppedTyping', (data) => {
            if (data.userId !== userId) {
                hideTypingIndicator();
            }
        });

        socket.on('fileUploaded', (data) => {
            // Refresh the files tab
            location.reload();
        });

        function displayMessage(message) {
            const chatMessages = document.getElementById('chatMessages');
            const isOwn = message.sender._id === userId;
            
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isOwn ? 'own' : ''}`;
            
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    ${message.sender.username.charAt(0).toUpperCase()}
                </div>
                <div class="message-content">
                    <div class="message-header">
                        <span>${isOwn ? 'You' : message.sender.username}</span>
                        <span>${new Date(message.timestamp).toLocaleTimeString()}</span>
                    </div>
                    <div class="message-text">${message.content}</div>
                </div>
            `;
            
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function showTypingIndicator(username) {
            const indicator = document.getElementById('typingIndicator');
            indicator.textContent = `${username} is typing...`;
            indicator.style.display = 'block';
        }

        function hideTypingIndicator() {
            const indicator = document.getElementById('typingIndicator');
            indicator.style.display = 'none';
        }

        // Video call functionality
        function startProjectCall() {
            const roomId = `project-${projectId}-call-${Date.now()}`;
            window.open(`/call/${roomId}`, '_blank', 'width=1200,height=800');
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Focus on message input when page loads
            document.getElementById('messageInput').focus();
            
            // Auto-resize text areas
            const textareas = document.querySelectorAll('textarea');
            textareas.forEach(textarea => {
                textarea.addEventListener('input', function() {
                    this.style.height = 'auto';
                    this.style.height = this.scrollHeight + 'px';
                });
            });
        });
    </script>
</body>
</html>