<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - CollabSpace</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #A82400;
            --primary-dark: #8A1E00;
            --secondary-color: #D63A0D;
            --accent-color: #FFEBCD;
            --bg-color: #FFEBCD;
            --card-bg: #FFF5E6;
            --hover-bg: #FFE4CC;
            --text-primary: #A82400;
            --text-secondary: #6B4423;
            --text-dark: #3A2317;
            --white: #FFFFFF;
            --gray-50: #FAFAFA;
            --gray-100: #F5F5F5;
            --gray-200: #E5E5E5;
            --gray-300: #D4D4D4;
            --gray-600: #525252;
            --gray-800: #262626;
            --shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 50%, var(--primary-dark) 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            line-height: 1.6;
        }
        
        .login-container {
            background: var(--card-bg);
            border-radius: 24px;
            box-shadow: var(--shadow-xl);
            overflow: hidden;
            width: 100%;
            max-width: 420px;
            position: relative;
            border: 1px solid var(--gray-200);
            animation: slideIn 0.6s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }
        
        .login-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            padding: 2.5rem 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .login-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            animation: shimmer 3s ease-in-out infinite;
        }

        @keyframes shimmer {
            0%, 100% { transform: translate(-50%, -50%) rotate(0deg); }
            50% { transform: translate(-50%, -50%) rotate(180deg); }
        }
        
        .login-header h1 {
            font-size: 2rem;
            margin-bottom: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
            font-weight: 700;
            position: relative;
            z-index: 2;
        }
        
        .login-header p {
            opacity: 0.95;
            font-size: 1rem;
            font-weight: 400;
            position: relative;
            z-index: 2;
        }
        
        .login-form {
            padding: 2.5rem 2rem;
            background: var(--card-bg);
        }
        
        .form-group {
            margin-bottom: 1.75rem;
            position: relative;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.75rem;
            font-weight: 600;
            color: var(--text-primary);
            font-size: 0.95rem;
            transition: color 0.3s ease;
        }
        
        .form-group input {
            width: 100%;
            padding: 1rem 1.25rem;
            border: 2px solid var(--gray-200);
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: var(--white);
            color: var(--text-dark);
        }
        
        .form-group input:focus {
            outline: none;
            border-color: var(--primary-color);
            background: var(--white);
            box-shadow: 0 0 0 4px rgba(168, 36, 0, 0.1);
            transform: translateY(-1px);
        }
        
        .form-group.has-icon {
            position: relative;
        }
        
        .form-group.has-icon input {
            padding-left: 3rem;
        }
        
        .form-group.has-icon .icon {
            position: absolute;
            left: 1rem;
            top: 3rem;
            color: var(--text-secondary);
            font-size: 1.1rem;
            transition: color 0.3s ease;
        }

        .form-group.has-icon input:focus + .icon,
        .form-group.has-icon.focused .icon {
            color: var(--primary-color);
        }
        
        .btn {
            width: 100%;
            padding: 1rem 1.5rem;
            border: none;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transition: all 0.3s ease;
            transform: translate(-50%, -50%);
        }

        .btn:hover::before {
            width: 300px;
            height: 300px;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            box-shadow: var(--shadow-md);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
            background: linear-gradient(135deg, var(--primary-dark), var(--primary-color));
        }
        
        .btn-secondary {
            background: var(--white);
            color: var(--text-primary);
            border: 2px solid var(--gray-200);
            margin-top: 1rem;
            box-shadow: var(--shadow-sm);
        }
        
        .btn-secondary:hover {
            background: var(--hover-bg);
            border-color: var(--primary-color);
            transform: translateY(-1px);
            box-shadow: var(--shadow-md);
        }
        
        .divider {
            text-align: center;
            margin: 2rem 0;
            position: relative;
            color: var(--text-secondary);
            font-size: 0.95rem;
            font-weight: 500;
        }
        
        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 2px;
            background: linear-gradient(to right, transparent, var(--gray-200), transparent);
            z-index: 1;
        }
        
        .divider span {
            background: var(--card-bg);
            padding: 0 1.5rem;
            position: relative;
            z-index: 2;
        }
        
        .error-message {
            background: linear-gradient(135deg, #fee, #fdd);
            color: var(--primary-dark);
            padding: 1rem 1.25rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            font-size: 0.95rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            border: 1px solid #fcc;
            font-weight: 500;
            animation: shake 0.5s ease-in-out;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        
        .forgot-password {
            text-align: center;
            margin-top: 1.5rem;
        }
        
        .forgot-password a {
            color: var(--primary-color);
            text-decoration: none;
            font-size: 0.95rem;
            font-weight: 500;
            transition: all 0.3s ease;
            padding: 0.5rem;
            border-radius: 6px;
        }
        
        .forgot-password a:hover {
            color: var(--primary-dark);
            background: var(--hover-bg);
            text-decoration: underline;
        }
        
        .features {
            background: var(--white);
            padding: 2rem;
            border-radius: 0 0 24px 24px;
            border-top: 1px solid var(--gray-200);
        }
        
        .features h3 {
            color: var(--text-primary);
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
            text-align: center;
            font-weight: 600;
        }
        
        .feature-list {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            font-size: 0.9rem;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            color: var(--text-secondary);
            padding: 0.75rem;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .feature-item:hover {
            background: var(--hover-bg);
            color: var(--text-primary);
            transform: translateY(-1px);
        }
        
        .feature-item i {
            color: var(--primary-color);
            font-size: 1rem;
            width: 20px;
            text-align: center;
        }
        
        .register-link {
            text-align: center;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid var(--gray-200);
            color: var(--text-secondary);
            font-size: 0.95rem;
        }
        
        .register-link a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
        }
        
        .register-link a:hover {
            text-decoration: underline;
            background: var(--hover-bg);
            color: var(--primary-dark);
        }

        /* Loading state */
        .btn.loading {
            pointer-events: none;
            opacity: 0.8;
        }

        .btn.loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .btn.loading i {
            opacity: 0;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            body {
                padding: 16px;
            }

            .login-container {
                max-width: 100%;
                border-radius: 20px;
            }
            
            .login-header {
                padding: 2rem 1.5rem;
            }

            .login-header h1 {
                font-size: 1.75rem;
            }
            
            .login-form {
                padding: 2rem 1.5rem;
            }

            .features {
                padding: 1.5rem;
            }
            
            .feature-list {
                grid-template-columns: 1fr;
                gap: 0.75rem;
            }

            .feature-item {
                padding: 0.5rem;
            }
        }

        @media (max-width: 480px) {
            body {
                padding: 12px;
            }

            .login-container {
                border-radius: 16px;
            }
            
            .login-header {
                padding: 1.5rem 1rem;
            }

            .login-header h1 {
                font-size: 1.5rem;
                gap: 0.5rem;
            }

            .login-header p {
                font-size: 0.9rem;
            }
            
            .login-form {
                padding: 1.5rem 1rem;
            }

            .form-group {
                margin-bottom: 1.5rem;
            }

            .form-group input {
                padding: 0.875rem 1rem;
                font-size: 16px; /* Prevents zoom on iOS */
            }

            .form-group.has-icon input {
                padding-left: 2.75rem;
            }

            .form-group.has-icon .icon {
                left: 0.875rem;
                top: 2.875rem;
            }

            .btn {
                padding: 0.875rem 1.25rem;
                font-size: 0.95rem;
            }

            .features {
                padding: 1.25rem 1rem;
            }

            .divider {
                margin: 1.5rem 0;
            }

            .forgot-password {
                margin-top: 1.25rem;
            }

            .register-link {
                margin-top: 1.5rem;
                padding-top: 1.5rem;
            }
        }

        /* High contrast mode support */
        @media (prefers-contrast: high) {
            .form-group input {
                border-width: 3px;
            }

            .btn {
                border: 2px solid transparent;
            }

            .btn-primary {
                border-color: var(--primary-dark);
            }

            .btn-secondary {
                border-color: var(--text-primary);
            }
        }

        /* Reduced motion preferences */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }

            .login-container {
                animation: none;
            }

            .login-header::before {
                animation: none;
            }
        }

        /* Dark mode support (if needed) */
        @media (prefers-color-scheme: dark) {
            .form-group input {
                background: var(--gray-50);
            }
        }

        /* Focus visible for keyboard navigation */
        .btn:focus-visible,
        .form-group input:focus-visible,
        .forgot-password a:focus-visible,
        .register-link a:focus-visible {
            outline: 3px solid var(--primary-color);
            outline-offset: 2px;
        }

        /* Touch targets for mobile */
        @media (pointer: coarse) {
            .btn {
                min-height: 48px;
            }

            .forgot-password a,
            .register-link a {
                min-height: 44px;
                display: inline-flex;
                align-items: center;
                padding: 0.5rem 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-header">
            <h1>
                <i class="fas fa-users"></i>
                CollabSpace
            </h1>
            <p>Sign in to collaborate with your team</p>
        </div>
        
        <div class="login-form">
            <div class="error-message" style="display: none;" id="errorMessage">
                <i class="fas fa-exclamation-triangle"></i>
                <span id="errorText"></span>
            </div>
            
            <form action="/login" method="POST" id="loginForm">
                <div class="form-group has-icon">
                    <label for="username">Username</label>
                    <input type="text" id="username" name="username" required 
                           placeholder="Enter your username" autocomplete="username">
                    <i class="fas fa-user icon"></i>
                </div>
                
                <div class="form-group has-icon">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" required 
                           placeholder="Enter your password" autocomplete="current-password">
                    <i class="fas fa-lock icon"></i>
                </div>
                
                <button type="submit" class="btn btn-primary" id="loginBtn">
                    <i class="fas fa-sign-in-alt"></i>
                    <span>Sign In</span>
                </button>
            </form>
            
            <div class="forgot-password">
                <a href="#" onclick="showForgotPassword()">
                    Forgot your password?
                </a>
            </div>
            
            <div class="divider">
                <span>or</span>
            </div>
            
            <a href="/register" class="btn btn-secondary">
                <i class="fas fa-user-plus"></i>
                <span>Create New Account</span>
            </a>
            
            <div class="register-link">
                Don't have an account? 
                <a href="/register">Sign up here</a>
            </div>
        </div>
        
        <div class="features">
            <h3>Why Choose CollabSpace?</h3>
            <div class="feature-list">
                <div class="feature-item">
                    <i class="fas fa-video"></i>
                    <span>Video Calls</span>
                </div>
                <div class="feature-item">
                    <i class="fas fa-comments"></i>
                    <span>Real-time Chat</span>
                </div>
                <div class="feature-item">
                    <i class="fas fa-tasks"></i>
                    <span>Task Management</span>
                </div>
                <div class="feature-item">
                    <i class="fas fa-file-upload"></i>
                    <span>File Sharing</span>
                </div>
                <div class="feature-item">
                    <i class="fas fa-users"></i>
                    <span>Team Collaboration</span>
                </div>
                <div class="feature-item">
                    <i class="fas fa-desktop"></i>
                    <span>Screen Sharing</span>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Enhanced interactive effects
        document.addEventListener('DOMContentLoaded', function() {
            // Focus on username field
            setTimeout(() => {
                document.getElementById('username').focus();
            }, 300);
            
            // Enhanced floating label effect
            const inputs = document.querySelectorAll('input');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });
                
                input.addEventListener('blur', function() {
                    if (!this.value.trim()) {
                        this.parentElement.classList.remove('focused');
                    }
                });
                
                // Check if input has value on load
                if (input.value.trim()) {
                    input.parentElement.classList.add('focused');
                }

                // Real-time validation feedback
                input.addEventListener('input', function() {
                    this.style.borderColor = '';
                    hideError();
                });
            });

            // Animate feature items
            const featureItems = document.querySelectorAll('.feature-item');
            featureItems.forEach((item, index) => {
                item.style.opacity = '0';
                item.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    item.style.transition = 'all 0.5s ease';
                    item.style.opacity = '1';
                    item.style.transform = 'translateY(0)';
                }, 800 + (index * 100));
            });
        });
        
        // Enhanced form validation
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value.trim();
            const password = document.getElementById('password').value;
            const loginBtn = document.getElementById('loginBtn');
            
            // Reset previous error states
            hideError();
            document.querySelectorAll('input').forEach(input => {
                input.style.borderColor = '';
            });
            
            // Validation
            if (!username || !password) {
                showError('Please fill in all fields');
                if (!username) highlightField('username');
                if (!password) highlightField('password');
                return;
            }
            
            if (username.length < 3) {
                showError('Username must be at least 3 characters long');
                highlightField('username');
                return;
            }
            
            if (password.length < 6) {
                showError('Password must be at least 6 characters long');
                highlightField('password');
                return;
            }
            
            // Show loading state
            showLoading(loginBtn);
            
            // Simulate API call (replace with actual form submission)
            setTimeout(() => {
                // For demo purposes, show success or error
                if (username === 'demo' && password === 'password') {
                    showSuccess();
                } else {
                    hideLoading(loginBtn);
                    showError('Invalid username or password');
                }
            }, 2000);
        });

        function showError(message) {
            const errorDiv = document.getElementById('errorMessage');
            const errorText = document.getElementById('errorText');
            errorText.textContent = message;
            errorDiv.style.display = 'flex';
            errorDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }

        function hideError() {
            document.getElementById('errorMessage').style.display = 'none';
        }

        function highlightField(fieldId) {
            const field = document.getElementById(fieldId);
            field.style.borderColor = 'var(--secondary-color)';
            field.focus();
        }

        function showLoading(button) {
            button.classList.add('loading');
            button.style.pointerEvents = 'none';
            button.querySelector('span').textContent = 'Signing In...';
        }

        function hideLoading(button) {
            button.classList.remove('loading');
            button.style.pointerEvents = 'auto';
            button.querySelector('span').textContent = 'Sign In';
        }

        function showSuccess() {
            const loginBtn = document.getElementById('loginBtn');
            hideLoading(loginBtn);
            loginBtn.innerHTML = '<i class="fas fa-check"></i><span>Success!</span>';
            loginBtn.style.background = 'linear-gradient(135deg, #4caf50, #45a049)';
            
            setTimeout(() => {
                // Redirect to dashboard
                window.location.href = '/dashboard';
            }, 1000);
        }

        function showForgotPassword() {
            if (confirm('Contact your administrator to reset your password.\n\nWould you like to copy the admin email to clipboard?')) {
                // Copy admin email to clipboard
                navigator.clipboard.writeText('admin@collabspace.com').then(() => {
                    alert('Admin email copied to clipboard: admin@collabspace.com');
                }).catch(() => {
                    alert('Admin email: admin@collabspace.com');
                });
            }
        }

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Alt + Enter to submit form
            if (e.altKey && e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('loginForm').dispatchEvent(new Event('submit'));
            }
            
            // Escape to clear form
            if (e.key === 'Escape') {
                document.getElementById('username').value = '';
                document.getElementById('password').value = '';
                hideError();
                document.getElementById('username').focus();
            }
        });

        // Enhanced accessibility
        document.querySelectorAll('input').forEach(input => {
            input.addEventListener('invalid', function(e) {
                e.preventDefault();
                showError(this.validationMessage);
                highlightField(this.id);
            });
        });

        // Auto-hide error message after 5 seconds
        let errorTimeout;
        function showError(message) {
            const errorDiv = document.getElementById('errorMessage');
            const errorText = document.getElementById('errorText');
            errorText.textContent = message;
            errorDiv.style.display = 'flex';
            errorDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            
            clearTimeout(errorTimeout);
            errorTimeout = setTimeout(() => {
                hideError();
            }, 5000);
        }

        // Handle paste events for better UX
        document.getElementById('username').addEventListener('paste', function(e) {
            setTimeout(() => {
                this.parentElement.classList.add('focused');
            }, 10);
        });

        document.getElementById('password').addEventListener('paste', function(e) {
            setTimeout(() => {
                this.parentElement.classList.add('focused');
            }, 10);
        });
    </script>
</body>
</html>