<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - CollabSpace</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .register-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 100%;
            max-width: 450px;
            position: relative;
        }
        
        .register-header {
            background: linear-gradient(135deg, #6c63ff, #5a52d5);
            color: white;
            padding: 2rem;
            text-align: center;
        }
        
        .register-header h1 {
            font-size: 1.8rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        .register-header p {
            opacity: 0.9;
            font-size: 0.9rem;
        }
        
        .register-form {
            padding: 2rem;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #333;
            font-size: 0.9rem;
        }
        
        .form-group input {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }
        
        .form-group input:focus {
            outline: none;
            border-color: #6c63ff;
            background: white;
            box-shadow: 0 0 0 3px rgba(108, 99, 255, 0.1);
        }
        
        .form-group.has-icon {
            position: relative;
        }
        
        .form-group.has-icon input {
            padding-left: 2.5rem;
        }
        
        .form-group.has-icon .icon {
            position: absolute;
            left: 0.75rem;
            top: 2.25rem;
            color: #6c757d;
            font-size: 1rem;
        }
        
        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.8rem;
        }
        
        .strength-bar {
            height: 4px;
            background: #e1e5e9;
            border-radius: 2px;
            margin: 0.5rem 0;
            overflow: hidden;
        }
        
        .strength-fill {
            height: 100%;
            width: 0%;
            background: #ff6b6b;
            transition: all 0.3s ease;
            border-radius: 2px;
        }
        
        .strength-fill.weak {
            background: #ff6b6b;
            width: 25%;
        }
        
        .strength-fill.fair {
            background: #ffa726;
            width: 50%;
        }
        
        .strength-fill.good {
            background: #66bb6a;
            width: 75%;
        }
        
        .strength-fill.strong {
            background: #4caf50;
            width: 100%;
        }
        
        .password-requirements {
            margin-top: 0.5rem;
            font-size: 0.75rem;
            color: #6c757d;
        }
        
        .requirement {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.25rem;
        }
        
        .requirement.met {
            color: #4caf50;
        }
        
        .requirement.met i {
            color: #4caf50;
        }
        
        .btn {
            width: 100%;
            padding: 0.75rem;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #6c63ff, #5a52d5);
            color: white;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(108, 99, 255, 0.3);
        }
        
        .btn-primary:disabled {
            background: #6c757d;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .btn-secondary {
            background: #f8f9fa;
            color: #6c757d;
            border: 2px solid #e1e5e9;
            margin-top: 1rem;
        }
        
        .btn-secondary:hover {
            background: #e9ecef;
            transform: translateY(-1px);
        }
        
        .error-message {
            background: #f8d7da;
            color: #721c24;
            padding: 0.75rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .success-message {
            background: #d4edda;
            color: #155724;
            padding: 0.75rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .terms {
            margin: 1rem 0;
            font-size: 0.8rem;
            color: #6c757d;
            line-height: 1.4;
        }
        
        .terms a {
            color: #6c63ff;
            text-decoration: none;
        }
        
        .terms a:hover {
            text-decoration: underline;
        }
        
        .login-link {
            text-align: center;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e1e5e9;
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .login-link a {
            color: #6c63ff;
            text-decoration: none;
            font-weight: 600;
        }
        
        .login-link a:hover {
            text-decoration: underline;
        }
        
        .divider {
            text-align: center;
            margin: 1.5rem 0;
            position: relative;
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: #e1e5e9;
            z-index: 1;
        }
        
        .divider span {
            background: white;
            padding: 0 1rem;
            position: relative;
            z-index: 2;
        }
        
        @media (max-width: 480px) {
            .register-container {
                margin: 10px;
            }
            
            .register-header,
            .register-form {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="register-container">
        <div class="register-header">
            <h1>
                <i class="fas fa-user-plus"></i>
                Join CollabSpace
            </h1>
            <p>Create your account and start collaborating</p>
        </div>
        
        <div class="register-form">
            <% if (typeof error !== 'undefined') { %>
                <div class="error-message">
                    <i class="fas fa-exclamation-triangle"></i>
                    <%= error %>
                </div>
            <% } %>
            
            <% if (typeof success !== 'undefined') { %>
                <div class="success-message">
                    <i class="fas fa-check-circle"></i>
                    <%= success %>
                </div>
            <% } %>
            
            <form action="/register" method="POST" id="registerForm">
                <div class="form-group has-icon">
                    <label for="username">Username</label>
                    <i class="fas fa-user icon"></i>
                    <input type="text" id="username" name="username" required 
                           placeholder="Choose a username" autocomplete="username">
                </div>
                
                <div class="form-group has-icon">
                    <label for="email">Email Address</label>
                    <i class="fas fa-envelope icon"></i>
                    <input type="email" id="email" name="email" required 
                           placeholder="Enter your email" autocomplete="email">
                </div>
                
                <div class="form-group has-icon">
                    <label for="password">Password</label>
                    <i class="fas fa-lock icon"></i>
                    <input type="password" id="password" name="password" required 
                           placeholder="Create a strong password" autocomplete="new-password">
                    
                    <div class="password-strength">
                        <div class="strength-bar">
                            <div class="strength-fill" id="strengthFill"></div>
                        </div>
                        <span id="strengthText">Password strength: </span>
                    </div>
                    
                    <div class="password-requirements">
                        <div class="requirement" id="lengthReq">
                            <i class="fas fa-times"></i>
                            <span>At least 8 characters</span>
                        </div>
                        <div class="requirement" id="upperReq">
                            <i class="fas fa-times"></i>
                            <span>One uppercase letter</span>
                        </div>
                        <div class="requirement" id="lowerReq">
                            <i class="fas fa-times"></i>
                            <span>One lowercase letter</span>
                        </div>
                        <div class="requirement" id="numberReq">
                            <i class="fas fa-times"></i>
                            <span>One number</span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group has-icon">
                    <label for="confirmPassword">Confirm Password</label>
                    <i class="fas fa-lock icon"></i>
                    <input type="password" id="confirmPassword" name="confirmPassword" required 
                           placeholder="Confirm your password" autocomplete="new-password">
                </div>
                
                <div class="terms">
                    By creating an account, you agree to our 
                    <a href="#" onclick="alert('Terms of Service would be displayed here')">Terms of Service</a> 
                    and 
                    <a href="#" onclick="alert('Privacy Policy would be displayed here')">Privacy Policy</a>.
                </div>
                
                <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                    <i class="fas fa-user-plus"></i>
                    Create Account
                </button>
            </form>
            
            <div class="divider">
                <span>or</span>
            </div>
            
            <a href="/login" class="btn btn-secondary">
                <i class="fas fa-sign-in-alt"></i>
                Sign In Instead
            </a>
            
            <div class="login-link">
                Already have an account? 
                <a href="/login">Sign in here</a>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animate the container on load
            const container = document.querySelector('.register-container');
            container.style.opacity = '0';
            container.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
                container.style.transition = 'all 0.5s ease';
                container.style.opacity = '1';
                container.style.transform = 'translateY(0)';
            }, 100);
            
            // Focus on username field
            document.getElementById('username').focus();
            
            // Password strength checker
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const strengthFill = document.getElementById('strengthFill');
            const strengthText = document.getElementById('strengthText');
            const submitBtn = document.getElementById('submitBtn');
            
            const requirements = {
                length: document.getElementById('lengthReq'),
                upper: document.getElementById('upperReq'),
                lower: document.getElementById('lowerReq'),
                number: document.getElementById('numberReq')
            };
            
            function checkPasswordStrength(password) {
                const checks = {
                    length: password.length >= 8,
                    upper: /[A-Z]/.test(password),
                    lower: /[a-z]/.test(password),
                    number: /[0-9]/.test(password)
                };
                
                // Update requirement indicators
                Object.keys(checks).forEach(req => {
                    const element = requirements[req];
                    const icon = element.querySelector('i');
                    
                    if (checks[req]) {
                        element.classList.add('met');
                        icon.className = 'fas fa-check';
                    } else {
                        element.classList.remove('met');
                        icon.className = 'fas fa-times';
                    }
                });
                
                // Calculate strength
                const metRequirements = Object.values(checks).filter(Boolean).length;
                let strength = 'weak';
                let strengthClass = 'weak';
                
                if (metRequirements === 4) {
                    strength = 'strong';
                    strengthClass = 'strong';
                } else if (metRequirements === 3) {
                    strength = 'good';
                    strengthClass = 'good';
                } else if (metRequirements === 2) {
                    strength = 'fair';
                    strengthClass = 'fair';
                }
                
                // Update strength indicator
                strengthFill.className = `strength-fill ${strengthClass}`;
                strengthText.textContent = `Password strength: ${strength}`;
                
                return metRequirements === 4;
            }
            
            function validateForm() {
                const username = document.getElementById('username').value.trim();
                const email = document.getElementById('email').value.trim();
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                const isUsernameValid = username.length >= 3;
                const isEmailValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
                const isPasswordValid = checkPasswordStrength(password);
                const doPasswordsMatch = password === confirmPassword && password.length > 0;
                
                submitBtn.disabled = !(isUsernameValid && isEmailValid && isPasswordValid && doPasswordsMatch);
            }
            
            // Event listeners
            passwordInput.addEventListener('input', function() {
                checkPasswordStrength(this.value);
                validateForm();
            });
            
            confirmPasswordInput.addEventListener('input', validateForm);
            document.getElementById('username').addEventListener('input', validateForm);
            document.getElementById('email').addEventListener('input', validateForm);
            
            // Form submission validation
            document.getElementById('registerForm').addEventListener('submit', function(e) {
                const username = document.getElementById('username').value.trim();
                const email = document.getElementById('email').value.trim();
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                // Validate username
                if (username.length < 3) {
                    e.preventDefault();
                    alert('Username must be at least 3 characters long');
                    return;
                }
                
                if (!/^[a-zA-Z0-9_]+$/.test(username)) {
                    e.preventDefault();
                    alert('Username can only contain letters, numbers, and underscores');
                    return;
                }
                
                // Validate email
                if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                    e.preventDefault();
                    alert('Please enter a valid email address');
                    return;
                }
                
                // Validate password
                if (!checkPasswordStrength(password)) {
                    e.preventDefault();
                    alert('Password must meet all requirements');
                    return;
                }
                
                // Validate password confirmation
                if (password !== confirmPassword) {
                    e.preventDefault();
                    alert('Passwords do not match');
                    return;
                }
            });
            
            // Add floating label effect
            const inputs = document.querySelectorAll('input');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });
                
                input.addEventListener('blur', function() {
                    if (!this.value) {
                        this.parentElement.classList.remove('focused');
                    }
                });
                
                // Check if input has value on load
                if (input.value) {
                    input.parentElement.classList.add('focused');
                }
            });
        });
    </script>
</body>
</html>