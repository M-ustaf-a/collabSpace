<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= project.name %> - CollabSpace</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #A82400;
            --primary-dark: #8A1E00;
            --secondary-color: #D63A0D;
            --accent-color: #FFEBCD;
            --bg-color: #FFEBCD;
            --card-bg: #FFF5E6;
            --hover-bg: #FFE4CC;
            --text-primary: #A82400;
            --text-secondary: #6B4423;
            --text-dark: #3A2317;
            --white: #FFFFFF;
            --gray-50: #FAFAFA;
            --gray-100: #F5F5F5;
            --gray-200: #E5E5E5;
            --gray-300: #D4D4D4;
            --gray-600: #525252;
            --gray-800: #262626;
            --shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: var(--bg-color);
            color: var(--text-dark);
            font-size: 14px;
        }
        
        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: var(--white);
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: var(--shadow-lg);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .header-left {
            display: flex;
            align-items: center;
            gap: 1rem;
            flex: 1;
        }
        
        .back-btn {
            background: none;
            border: none;
            color: var(--white);
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 8px;
            transition: all 0.3s;
            min-width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .back-btn:hover {
            background: rgba(255,255,255,0.1);
            transform: translateX(-2px);
        }
        
        .project-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            flex: 1;
        }
        
        .project-header h1 {
            font-size: clamp(1.2rem, 3vw, 1.8rem);
            font-weight: 600;
        }
        
        .member-count {
            opacity: 0.8;
            font-size: 0.9rem;
            background: rgba(255,255,255,0.1);
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
        }
        
        .project-actions {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }
        
        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            color: var(--white);
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 8px;
        }
        
        .main-container {
            display: grid;
            grid-template-columns: 280px 1fr 320px;
            min-height: calc(100vh - 80px);
            gap: 0;
        }
        
        .left-panel,
        .right-panel {
            background: var(--white);
            border: 1px solid var(--gray-200);
            display: flex;
            flex-direction: column;
            box-shadow: var(--shadow-sm);
        }
        
        .center-panel {
            background: var(--card-bg);
            display: flex;
            flex-direction: column;
            min-height: calc(100vh - 80px);
        }
        
        .panel-header {
            padding: 1rem;
            border-bottom: 1px solid var(--gray-200);
            font-weight: 600;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: var(--card-bg);
            color: var(--text-primary);
        }
        
        .panel-content {
            flex: 1;
            padding: 1rem;
            overflow-y: auto;
        }
        
        .tab-container {
            display: flex;
            background: var(--white);
            border-bottom: 1px solid var(--gray-200);
        }
        
        .tab {
            flex: 1;
            padding: 1rem;
            text-align: center;
            cursor: pointer;
            background: var(--gray-100);
            border: none;
            font-size: 0.9rem;
            transition: all 0.3s;
            color: var(--text-secondary);
            font-weight: 500;
        }
        
        .tab.active {
            background: var(--white);
            border-bottom: 3px solid var(--primary-color);
            color: var(--primary-color);
        }
        
        .tab:hover:not(.active) {
            background: var(--hover-bg);
        }
        
        .tab-content {
            display: none;
            flex: 1;
            padding: 1.5rem;
            overflow-y: auto;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .task-item {
            background: var(--white);
            border: 1px solid var(--gray-200);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s;
            box-shadow: var(--shadow-xs);
        }
        
        .task-item:hover {
            box-shadow: var(--shadow-md);
            transform: translateY(-2px);
            border-color: var(--primary-color);
        }
        
        .task-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.75rem;
            gap: 1rem;
        }
        
        .task-title {
            font-weight: 600;
            color: var(--text-primary);
            font-size: 1.1rem;
            line-height: 1.3;
        }
        
        .task-status {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            white-space: nowrap;
        }
        
        .status-pending {
            background: #FFF3CD;
            color: #856404;
            border: 1px solid #FFE69C;
        }
        
        .status-inprogress {
            background: #D1ECF1;
            color: #0C5460;
            border: 1px solid #BEE5EB;
        }
        
        .status-completed {
            background: #D4EDDA;
            color: #155724;
            border: 1px solid #C3E6CB;
        }
        
        .task-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1rem;
            font-size: 0.8rem;
            color: var(--text-secondary);
            flex-wrap: wrap;
            gap: 0.5rem;
        }
        
        .priority-badge {
            padding: 0.25rem 0.6rem;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .priority-high {
            background: #F8D7DA;
            color: #721C24;
            border: 1px solid #F5C6CB;
        }
        
        .priority-medium {
            background: #FFF3CD;
            color: #856404;
            border: 1px solid #FFE69C;
        }
        
        .priority-low {
            background: #D1ECF1;
            color: #0C5460;
            border: 1px solid #BEE5EB;
        }
        
        .member-list {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .member-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem;
            border-radius: 10px;
            transition: all 0.3s;
            border: 1px solid transparent;
        }
        
        .member-item:hover {
            background: var(--hover-bg);
            border-color: var(--gray-200);
        }
        
        .member-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--white);
            font-weight: 600;
            font-size: 1rem;
            box-shadow: var(--shadow-sm);
        }
        
        .member-info {
            flex: 1;
        }
        
        .member-name {
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: var(--text-primary);
        }
        
        .member-status {
            font-size: 0.8rem;
            color: var(--text-secondary);
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }
        
        .status-online {
            color: #4CAF50;
        }
        
        .status-offline {
            color: var(--gray-600);
        }
        
        .file-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 1rem;
            border: 1px solid var(--gray-200);
            border-radius: 12px;
            margin-bottom: 0.75rem;
            transition: all 0.3s;
            background: var(--white);
        }
        
        .file-item:hover {
            background: var(--hover-bg);
            border-color: var(--primary-color);
            box-shadow: var(--shadow-sm);
        }
        
        .file-icon {
            width: 45px;
            height: 45px;
            border-radius: 10px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--white);
            font-size: 1.2rem;
            box-shadow: var(--shadow-sm);
        }
        
        .file-info {
            flex: 1;
            min-width: 0;
        }
        
        .file-name {
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: var(--text-primary);
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .file-meta {
            font-size: 0.8rem;
            color: var(--text-secondary);
        }
        
        .chat-container {
            display: flex;
            flex-direction: column;
            height: 100%;
        }
        
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
            background: var(--gray-50);
            min-height: 300px;
        }
        
        .message {
            margin-bottom: 1rem;
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .message.own {
            flex-direction: row-reverse;
        }
        
        .message-avatar {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--white);
            font-weight: 600;
            font-size: 0.9rem;
            flex-shrink: 0;
            box-shadow: var(--shadow-sm);
        }
        
        .message-content {
            max-width: 75%;
            background: var(--white);
            padding: 0.75rem 1rem;
            border-radius: 12px;
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--gray-200);
        }
        
        .message.own .message-content {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            border-color: var(--primary-color);
        }
        
        .message-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.5rem;
            font-size: 0.8rem;
            font-weight: 600;
        }
        
        .message.own .message-header {
            color: rgba(255,255,255,0.8);
        }
        
        .message-text {
            line-height: 1.4;
        }
        
        .chat-input {
            padding: 1rem;
            border-top: 1px solid var(--gray-200);
            background: var(--white);
        }
        
        .input-group {
            display: flex;
            gap: 0.75rem;
            align-items: center;
        }
        
        .input-group input {
            flex: 1;
            padding: 0.75rem 1rem;
            border: 2px solid var(--gray-200);
            border-radius: 25px;
            outline: none;
            font-size: 0.9rem;
            transition: all 0.3s;
            background: var(--gray-50);
        }
        
        .input-group input:focus {
            border-color: var(--primary-color);
            background: var(--white);
            box-shadow: 0 0 0 3px rgba(168, 36, 0, 0.1);
        }
        
        .send-btn {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            border: none;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s;
            box-shadow: var(--shadow-sm);
        }
        
        .send-btn:hover {
            transform: scale(1.1);
            box-shadow: var(--shadow-md);
        }
        
        .btn {
            padding: 0.6rem 1.2rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            white-space: nowrap;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            box-shadow: var(--shadow-sm);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }
        
        .btn-secondary {
            background: var(--gray-600);
            color: var(--white);
            box-shadow: var(--shadow-sm);
        }
        
        .btn-secondary:hover {
            background: var(--gray-800);
            transform: translateY(-2px);
        }
        
        .btn-success {
            background: #28A745;
            color: var(--white);
            box-shadow: var(--shadow-sm);
        }
        
        .btn-success:hover {
            background: #218838;
            transform: translateY(-2px);
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            backdrop-filter: blur(5px);
        }
        
        .modal-content {
            background-color: var(--white);
            margin: 5% auto;
            padding: 2rem;
            border-radius: 15px;
            width: 90%;
            max-width: 500px;
            position: relative;
            box-shadow: var(--shadow-xl);
            border: 1px solid var(--gray-200);
        }
        
        .close {
            position: absolute;
            right: 1rem;
            top: 1rem;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-secondary);
            transition: all 0.3s;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }
        
        .close:hover {
            color: var(--primary-color);
            background: var(--hover-bg);
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--text-primary);
        }
        
        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid var(--gray-200);
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.3s;
            background: var(--gray-50);
        }
        
        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            border-color: var(--primary-color);
            outline: none;
            background: var(--white);
            box-shadow: 0 0 0 3px rgba(168, 36, 0, 0.1);
        }
        
        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }
        
        .typing-indicator {
            padding: 0.5rem 1rem;
            font-size: 0.8rem;
            color: var(--text-secondary);
            font-style: italic;
            border-top: 1px solid var(--gray-200);
            background: var(--gray-50);
        }
        
        /* Mobile Responsive Design */
        @media (max-width: 1024px) {
            .main-container {
                grid-template-columns: 250px 1fr 280px;
            }
            
            .project-actions .btn {
                padding: 0.5rem 0.8rem;
                font-size: 0.8rem;
            }
            
            .project-actions .btn .fa {
                margin-right: 0.25rem;
            }
        }
        
        @media (max-width: 768px) {
            .header {
                padding: 0.75rem;
            }
            
            .mobile-menu-btn {
                display: block;
            }
            
            .project-actions {
                display: none;
            }
            
            .project-actions.mobile-show {
                display: flex;
                position: absolute;
                top: 100%;
                right: 0;
                background: var(--white);
                box-shadow: var(--shadow-lg);
                border-radius: 0 0 0 10px;
                padding: 1rem;
                z-index: 200;
            }
            
            .main-container {
                grid-template-columns: 1fr;
                grid-template-rows: auto auto 1fr;
            }
            
            .left-panel,
            .right-panel {
                display: none;
            }
            
            .left-panel.mobile-show,
            .right-panel.mobile-show {
                display: flex;
                position: fixed;
                top: 80px;
                left: 0;
                right: 0;
                bottom: 0;
                z-index: 300;
                background: var(--white);
            }
            
            .center-panel {
                min-height: calc(100vh - 80px);
            }
            
            .task-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }
            
            .task-meta {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .file-item {
                padding: 0.75rem;
            }
            
            .member-item {
                padding: 0.5rem;
            }
            
            .chat-messages {
                min-height: 200px;
            }
            
            .message-content {
                max-width: 85%;
            }
        }
        
        @media (max-width: 480px) {
            .header {
                padding: 0.5rem;
            }
            
            .project-header h1 {
                font-size: 1.1rem;
            }
            
            .member-count {
                font-size: 0.8rem;
                padding: 0.2rem 0.5rem;
            }
            
            .tab-content {
                padding: 1rem;
            }
            
            .task-item {
                padding: 1rem;
            }
            
            .btn {
                padding: 0.5rem 1rem;
                font-size: 0.8rem;
            }
            
            .modal-content {
                margin: 10% auto;
                padding: 1.5rem;
                width: 95%;
            }
            
            .file-name {
                font-size: 0.9rem;
            }
            
            .file-meta {
                font-size: 0.75rem;
            }
        }
        
        /* Additional responsive helpers */
        .mobile-only {
            display: none;
        }
        
        .desktop-only {
            display: block;
        }
        
        @media (max-width: 768px) {
            .mobile-only {
                display: block;
            }
            
            .desktop-only {
                display: none;
            }
        }
        
        /* Improved accessibility */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }
        
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border: 0;
        }
        
        /* Focus states */
        .btn:focus,
        .tab:focus,
        .back-btn:focus {
            outline: 2px solid var(--accent-color);
            outline-offset: 2px;
        }
        
        /* Enhanced mobile navigation */
        .mobile-nav-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            z-index: 250;
        }
        
        .mobile-nav-overlay.show {
            display: block;
        }
        
        /* Empty state styling */
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
            color: var(--text-secondary);
        }
        
        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: var(--gray-300);
        }
        
        .empty-state h3 {
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-left">
            <button class="back-btn" onclick="window.location.href='/dashboard'">
                <i class="fas fa-arrow-left"></i>
                <span class="sr-only">Back to Dashboard</span>
            </button>
            <div class="project-header">
                <h1><%= project.name %></h1>
                <span class="member-count">
                    <%= project.members.length %> members
                </span>
            </div>
        </div>
        <div class="project-actions">
            <button class="btn btn-success" onclick="startProjectCall()">
                <i class="fas fa-video"></i> <span class="desktop-only">Start Call</span>
            </button>
            <button class="btn btn-secondary" onclick="openModal('inviteModal')">
                <i class="fas fa-user-plus"></i> <span class="desktop-only">Invite</span>
            </button>
        </div>
        <button class="mobile-menu-btn" onclick="toggleMobileMenu()">
            <i class="fas fa-bars"></i>
        </button>
    </div>

    <div class="main-container">
        <!-- Left Panel - Project Members -->
        <div class="left-panel" id="leftPanel">
            <div class="panel-header">
                <span><i class="fas fa-users"></i> Team Members</span>
                <button class="mobile-only btn btn-secondary" onclick="closeMobilePanel('leftPanel')" style="padding: 0.25rem 0.5rem; font-size: 0.8rem;">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="panel-content">
                <div class="member-list">
                    <% project.members.forEach(member => { %>
                        <div class="member-item">
                            <div class="member-avatar">
                                <%= member.username.charAt(0).toUpperCase() %>
                            </div>
                            <div class="member-info">
                                <div class="member-name"><%= member.username %></div>
                                <div class="member-status status-<%= member.status %>">
                                    <i class="fas fa-circle"></i> <%= member.status %>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>

        <!-- Center Panel - Tasks and Files -->
        <div class="center-panel">
            <div class="tab-container">
                <button class="tab active" onclick="switchTab('tasks')">
                    <i class="fas fa-tasks"></i> Tasks
                </button>
                <button class="tab" onclick="switchTab('files')">
                    <i class="fas fa-folder"></i> Files
                </button>
                <button class="tab mobile-only" onclick="showMobilePanel('leftPanel')">
                    <i class="fas fa-users"></i> Team
                </button>
                <button class="tab mobile-only" onclick="showMobilePanel('rightPanel')">
                    <i class="fas fa-comments"></i> Chat
                </button>
            </div>

            <!-- Tasks Tab -->
            <div id="tasks" class="tab-content active">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem; flex-wrap: wrap; gap: 1rem;">
                    <h3 style="color: var(--text-primary);">Project Tasks</h3>
                    <button class="btn btn-primary" onclick="openModal('createTaskModal')">
                        <i class="fas fa-plus"></i> Add Task
                    </button>
                </div>

                <% if (tasks.length === 0) { %>
                    <div class="empty-state">
                        <i class="fas fa-tasks"></i>
                        <h3>No tasks yet</h3>
                        <p>Create your first task to get started</p>
                    </div>
                <% } else { %>
                    <div class="task-list">
                        <% tasks.forEach(task => { %>
                            <div class="task-item">
                                <div class="task-header">
                                    <div class="task-title"><%= task.title %></div>
                                    <div class="task-status status-<%= task.status.replace('-', '') %>">
                                        <%= task.status.replace('-', ' ') %>
                                    </div>
                                </div>
                                <% if (task.description) { %>
                                    <p style="color: var(--text-secondary); margin-bottom: 0.75rem; line-height: 1.4;"><%= task.description %></p>
                                <% } %>
                                <div class="task-meta">
                                    <div>
                                        <span class="priority-badge priority-<%= task.priority %>">
                                            <%= task.priority %> priority
                                        </span>
                                        <% if (task.assignedTo) { %>
                                            <span style="margin-left: 0.5rem; color: var(--text-secondary);">
                                                Assigned to: <%= task.assignedTo.username %>
                                            </span>
                                        <% } %>
                                    </div>
                                    <div style="display: flex; align-items: center; gap: 1rem;">
                                        <% if (task.dueDate) { %>
                                            <span>Due: <%= new Date(task.dueDate).toLocaleDateString() %></span>
                                        <% } %>
                                        <form style="display: inline;" 
                                              action="/task/<%= task._id %>/update" method="POST">
                                            <select name="status" onchange="this.form.submit()" 
                                                    style="padding: 0.3rem; border: 2px solid var(--gray-200); border-radius: 6px; background: var(--white); color: var(--text-primary);">
                                                <option value="pending" <%= task.status === 'pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="in-progress" <%= task.status === 'in-progress' ? 'selected' : '' %>>In Progress</option>
                                                <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Completed</option>
                                            </select>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>

            <!-- Files Tab -->
            <div id="files" class="tab-content">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem; flex-wrap: wrap; gap: 1rem;">
                    <h3 style="color: var(--text-primary);">Project Files</h3>
                    <button class="btn btn-primary" onclick="document.getElementById('fileInput').click()">
                        <i class="fas fa-upload"></i> Upload File
                    </button>
                </div>

                <form id="uploadForm" action="/upload/<%= project._id %>" method="POST" enctype="multipart/form-data" style="display: none;">
                    <input type="file" id="fileInput" name="file" onchange="document.getElementById('uploadForm').submit()">
                </form>

                <% if (files.length === 0) { %>
                    <div class="empty-state">
                        <i class="fas fa-folder-open"></i>
                        <h3>No files uploaded</h3>
                        <p>Upload files to share with your team</p>
                    </div>
                <% } else { %>
                    <div class="file-list">
                        <% files.forEach(file => { %>
                            <div class="file-item">
                                <div class="file-icon">
                                    <i class="fas fa-file"></i>
                                </div>
                                <div class="file-info">
                                    <div class="file-name"><%= file.originalName %></div>
                                    <div class="file-meta">
                                        Uploaded by <%= file.uploadedBy.username %> • 
                                        <%= (file.size / 1024).toFixed(1) %> KB • 
                                        <%= new Date(file.uploadedAt).toLocaleDateString() %>
                                    </div>
                                </div>
                                <a href="/uploads/<%= file.filename %>" download class="btn btn-secondary">
                                    <i class="fas fa-download"></i>
                                </a>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Right Panel - Chat -->
        <div class="right-panel" id="rightPanel">
            <div class="panel-header">
                <span><i class="fas fa-comments"></i> Team Chat</span>
                <button class="mobile-only btn btn-secondary" onclick="closeMobilePanel('rightPanel')" style="padding: 0.25rem 0.5rem; font-size: 0.8rem;">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="chat-container">
                <div class="chat-messages" id="chatMessages">
                    <div class="empty-state" style="padding: 2rem 1rem;">
                        <i class="fas fa-comments"></i>
                        <h3>Team Chat</h3>
                        <p>Chat history will appear here</p>
                    </div>
                </div>
                <div class="typing-indicator" id="typingIndicator" style="display: none;">
                    Someone is typing...
                </div>
                <div class="chat-input">
                    <div class="input-group">
                        <input type="text" id="messageInput" placeholder="Type a message..." 
                               maxlength="500" onkeypress="handleKeyPress(event)">
                        <button class="send-btn" onclick="sendMessage()">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Mobile Navigation Overlay -->
    <div class="mobile-nav-overlay" id="mobileNavOverlay" onclick="closeMobilePanels()"></div>

    <!-- Create Task Modal -->
    <div id="createTaskModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('createTaskModal')">&times;</span>
            <h2 style="color: var(--text-primary); margin-bottom: 1.5rem;">Create New Task</h2>
            <form action="/task/create" method="POST">
                <input type="hidden" name="projectId" value="<%= project._id %>">
                <div class="form-group">
                    <label for="taskTitle">Task Title</label>
                    <input type="text" id="taskTitle" name="title" required>
                </div>
                <div class="form-group">
                    <label for="taskDescription">Description</label>
                    <textarea id="taskDescription" name="description"></textarea>
                </div>
                <div class="form-group">
                    <label for="assignedTo">Assign To</label>
                    <select id="assignedTo" name="assignedTo">
                        <option value="">Unassigned</option>
                        <% project.members.forEach(member => { %>
                            <option value="<%= member._id %>"><%= member.username %></option>
                        <% }); %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="priority">Priority</label>
                    <select id="priority" name="priority">
                        <option value="low">Low</option>
                        <option value="medium" selected>Medium</option>
                        <option value="high">High</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="dueDate">Due Date</label>
                    <input type="date" id="dueDate" name="dueDate">
                </div>
                <div style="display: flex; justify-content: flex-end; gap: 1rem; margin-top: 2rem;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('createTaskModal')">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create Task
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Invite Member Modal -->
    <div id="inviteModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('inviteModal')">&times;</span>
            <h2 style="color: var(--text-primary); margin-bottom: 1.5rem;">Invite Team Member</h2>
            <form action="/project/<%= project._id %>/invite" method="POST">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" name="username" required 
                           placeholder="Enter username to invite">
                </div>
                <div style="display: flex; justify-content: flex-end; gap: 1rem; margin-top: 2rem;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('inviteModal')">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i> Send Invite
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const userId = '<%= user._id %>';
        const username = '<%= user.username %>';
        const projectId = '<%= project._id %>';
        const projectRoom = `project-${projectId}`;

        let typingTimer;
        let isTyping = false;

        // Connect to socket and join project room
        socket.emit('userConnected', userId);
        socket.emit('joinRoom', projectRoom);

        // Load existing messages
        loadMessages();

        // Tab switching functionality
        function switchTab(tabName) {
            // Remove active class from all tabs and content
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            // Add active class to clicked tab and corresponding content
            event.target.classList.add('active');
            document.getElementById(tabName).classList.add('active');
        }

        // Mobile navigation functions
        function toggleMobileMenu() {
            const actions = document.querySelector('.project-actions');
            actions.classList.toggle('mobile-show');
        }

        function showMobilePanel(panelId) {
            const panel = document.getElementById(panelId);
            const overlay = document.getElementById('mobileNavOverlay');
            panel.classList.add('mobile-show');
            overlay.classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function closeMobilePanel(panelId) {
            const panel = document.getElementById(panelId);
            const overlay = document.getElementById('mobileNavOverlay');
            panel.classList.remove('mobile-show');
            overlay.classList.remove('show');
            document.body.style.overflow = '';
        }

        function closeMobilePanels() {
            document.querySelectorAll('.left-panel, .right-panel').forEach(panel => {
                panel.classList.remove('mobile-show');
            });
            document.getElementById('mobileNavOverlay').classList.remove('show');
            document.body.style.overflow = '';
        }

        // Modal functions
        function openModal(modalId) {
            document.getElementById(modalId).style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
            document.body.style.overflow = '';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modals = document.getElementsByClassName('modal');
            for (let modal of modals) {
                if (event.target === modal) {
                    modal.style.display = 'none';
                    document.body.style.overflow = '';
                }
            }
        }

        // Chat functionality
        function loadMessages() {
            // In a real implementation, you would load messages from the server
            // For now, we'll just initialize the chat
            const chatMessages = document.getElementById('chatMessages');
            // Keep the existing empty state or load actual messages here
        }

        function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const content = messageInput.value.trim();
            
            if (content) {
                socket.emit('sendMessage', {
                    content: content,
                    senderId: userId,
                    room: projectRoom,
                    type: 'text'
                });
                
                messageInput.value = '';
                stopTyping();
            }
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                sendMessage();
            } else {
                handleTyping();
            }
        }

        function handleTyping() {
            if (!isTyping) {
                isTyping = true;
                socket.emit('typing', {
                    room: projectRoom,
                    userId: userId,
                    username: username
                });
            }
            
            clearTimeout(typingTimer);
            typingTimer = setTimeout(stopTyping, 1000);
        }

        function stopTyping() {
            if (isTyping) {
                isTyping = false;
                socket.emit('stopTyping', {
                    room: projectRoom,
                    userId: userId
                });
            }
        }

        // Socket event listeners
        socket.on('newMessage', (message) => {
            displayMessage(message);
        });

        socket.on('userTyping', (data) => {
            if (data.userId !== userId) {
                showTypingIndicator(data.username);
            }
        });

        socket.on('userStoppedTyping', (data) => {
            if (data.userId !== userId) {
                hideTypingIndicator();
            }
        });

        socket.on('fileUploaded', (data) => {
            // Refresh the files tab
            location.reload();
        });

        function displayMessage(message) {
            const chatMessages = document.getElementById('chatMessages');
            
            // Remove empty state if it exists
            const emptyState = chatMessages.querySelector('.empty-state');
            if (emptyState) {
                emptyState.remove();
            }
            
            const isOwn = message.sender._id === userId;
            
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isOwn ? 'own' : ''}`;
            
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    ${message.sender.username.charAt(0).toUpperCase()}
                </div>
                <div class="message-content">
                    <div class="message-header">
                        <span>${isOwn ? 'You' : message.sender.username}</span>
                        <span>${new Date(message.timestamp).toLocaleTimeString()}</span>
                    </div>
                    <div class="message-text">${message.content}</div>
                </div>
            `;
            
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function showTypingIndicator(username) {
            const indicator = document.getElementById('typingIndicator');
            indicator.textContent = `${username} is typing...`;
            indicator.style.display = 'block';
        }

        function hideTypingIndicator() {
            const indicator = document.getElementById('typingIndicator');
            indicator.style.display = 'none';
        }

        // Video call functionality
        function startProjectCall() {
            const roomId = `project-${projectId}-call-${Date.now()}`;
            window.open(`/call/${roomId}`, '_blank', 'width=1200,height=800');
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Focus on message input when page loads
            const messageInput = document.getElementById('messageInput');
            if (messageInput) {
                messageInput.focus();
            }
            
            // Auto-resize text areas
            const textareas = document.querySelectorAll('textarea');
            textareas.forEach(textarea => {
                textarea.addEventListener('input', function() {
                    this.style.height = 'auto';
                    this.style.height = this.scrollHeight + 'px';
                });
            });

            // Close mobile menu when clicking outside
            document.addEventListener('click', function(event) {
                const mobileMenu = document.querySelector('.project-actions.mobile-show');
                const menuButton = document.querySelector('.mobile-menu-btn');
                
                if (mobileMenu && !mobileMenu.contains(event.target) && !menuButton.contains(event.target)) {
                    mobileMenu.classList.remove('mobile-show');
                }
            });

            // Handle window resize
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    closeMobilePanels();
                    document.querySelector('.project-actions').classList.remove('mobile-show');
                }
            });
        });

        // Handle escape key to close modals and panels
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                // Close modals
                const modals = document.querySelectorAll('.modal');
                modals.forEach(modal => {
                    if (modal.style.display === 'block') {
                        modal.style.display = 'none';
                        document.body.style.overflow = '';
                    }
                });
                
                // Close mobile panels
                closeMobilePanels();
                
                // Close mobile menu
                document.querySelector('.project-actions').classList.remove('mobile-show');
            }
        });
    </script>
</body>
</html>